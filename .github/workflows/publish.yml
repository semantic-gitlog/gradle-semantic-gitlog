name: gradle-semantic-gitlog

on: [ push, pull_request ]

env:
  GRADLE_PUBLISH_KEY: ${{ secrets.GRADLE_PUBLISH_KEY }}
  GRADLE_PUBLISH_SECRET: ${{ secrets.GRADLE_PUBLISH_SECRET }}
  OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
  OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}
  OSSRH_GPG_SECRET_ID: ${{ secrets.OSSRH_GPG_SECRET_ID }}
  OSSRH_GPG_SECRET_PASSWORD: ${{ secrets.OSSRH_GPG_SECRET_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest

    if: startsWith(github.event.head_commit.message, 'bumped version to ') != true

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Cache dependencies
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: ${{ runner.os }}-gradle-

    - name: Prepare to build
      run: chmod +x ./gradlew

    - name: Build project
      run: ./gradlew build -x test

  test:
    needs: [ build ]
    runs-on: ubuntu-latest

    if: (github.ref == 'refs/heads/master') && startsWith(github.event.head_commit.message, 'bumped version to ') != true && startsWith(github.event.head_commit.message, 'release:') != true

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Cache dependencies
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: ${{ runner.os }}-gradle-

    - name: Prepare to build
      run: chmod +x ./gradlew

    - name: Run tests
      run: ./gradlew check test -S

  deploy_snapshot:
    needs: [ build, test ]
    runs-on: ubuntu-latest

    if: (github.ref == 'refs/heads/master') && startsWith(github.event.head_commit.message, 'bumped version to ') != true && startsWith(github.event.head_commit.message, 'release:') != true

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Cache dependencies
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: ${{ runner.os }}-gradle-

    - name: Prepare to build
      run: |
        chmod +x ./gradlew
        git show-ref
        git log --graph --full-history --all --color --date=short --pretty=format:"%Cred%x09%h %Creset%ad%Cgreen%d %Creset %s %C(bold)(%an)%Creset" || true

    - id: install-secret-key
      name: Install gpg secret key
      run: echo "${{ secrets.OSSRH_GPG_SECRET_KEY }}" | base64 -d > ./secret.gpg

    - id: publish
      name: Publish snapshot
      run: |
        newVersion=`./gradlew derive --preRelease='SNAPSHOT' -i | grep 'NEXT_VERSION:==' | sed 's/^.*NEXT_VERSION:==//g'`

        echo "newVersion: ${newVersion}"

        ./gradlew setNewVersion -P newVersion=${newVersion} 1>/dev/null 2>/dev/null
        ./gradlew publishMavenJavaPublicationToMavenRepository -x test -P OSSRH_GPG_SECRET_KEY=./secret.gpg
        ./gradlew publishPlugins -x test -P OSSRH_GPG_SECRET_KEY=./secret.gpg -P gradle.publish.key=${{env.GRADLE_PUBLISH_KEY}} -P gradle.publish.secret=${{env.GRADLE_PUBLISH_SECRET}}

        rm -rf ./secret.gpg

  deploy_release:
    needs: [ build ]
    runs-on: ubuntu-latest

    if: startsWith(github.ref, 'refs/tags/') && startsWith(github.event.head_commit.message, 'release')

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Cache dependencies
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: ${{ runner.os }}-gradle-

    - name: Prepare to build
      run: |
        chmod +x ./gradlew
        git show-ref
        git log --graph --full-history --all --color --date=short --pretty=format:"%Cred%x09%h %Creset%ad%Cgreen%d %Creset %s %C(bold)(%an)%Creset" || true

    - id: install-secret-key
      name: Install gpg secret key
      run: echo "${{ secrets.OSSRH_GPG_SECRET_KEY }}" | base64 -d > ./secret.gpg

    - name: Publish release
      run: |
        ./gradlew publishMavenJavaPublicationToMavenRepository -x test -P OSSRH_GPG_SECRET_KEY=./secret.gpg
        ./gradlew publishPlugins -x test -P OSSRH_GPG_SECRET_KEY=./secret.gpg -P gradle.publish.key=${{env.GRADLE_PUBLISH_KEY}} -P gradle.publish.secret=${{env.GRADLE_PUBLISH_SECRET}}

        rm -rf ./secret.gpg
